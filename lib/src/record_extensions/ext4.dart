// Auto generated by `gen_record_extensions.dart`. Do not modify!
part of 'record_extensions.dart';
extension RecordOf4ParsersExt<T0, T1, T2, T3> on (p.Parser<T0>, p.Parser<T1>, p.Parser<T2>, p.Parser<T3>) {
	p.Parser<(T0, T1, T2, T3)> toParser() => p.list([$1, $2, $3, $4]).mapOk((v) => (v[0] as T0, v[1] as T1, v[2] as T2, v[3] as T3));}

extension E4ParsersExt<T0, T1, T2, T3> on p.Parser<(T0, T1, T2, T3)> {
	p.Parser<T3> get onlyLast => mapOk((v) => v.$4);
	p.Parser<T0> get onlyFirst => mapOk((v) => v.$1);
}

// Auto generated by `gen_record_extensions.dart`. Do not modify!
part of 'record_extensions.dart';
extension RecordOf12ParsersExt<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> on (p.Parser<T0>, p.Parser<T1>, p.Parser<T2>, p.Parser<T3>, p.Parser<T4>, p.Parser<T5>, p.Parser<T6>, p.Parser<T7>, p.Parser<T8>, p.Parser<T9>, p.Parser<T10>, p.Parser<T11>) {
	p.Parser<(T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)> toParser() => p.list([$1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12]).mapOk((v) => (v[0] as T0, v[1] as T1, v[2] as T2, v[3] as T3, v[4] as T4, v[5] as T5, v[6] as T6, v[7] as T7, v[8] as T8, v[9] as T9, v[10] as T10, v[11] as T11));}

extension E12ParsersExt<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> on p.Parser<(T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)> {
	p.Parser<T11> get onlyLast => mapOk((v) => v.$12);
	p.Parser<T0> get onlyFirst => mapOk((v) => v.$1);
}
